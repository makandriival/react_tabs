{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabClick","selectedTab","className","map","tab","classNames","id","href","onClick","title","content","App","useState","setSelectedTab","tabID","tabToSet","find","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IAAW,CAAE,YAAaJ,EAAYK,KAAOF,EAAIE,KAC5D,UAAQ,MAFV,SAKE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,WAnBA,IAACF,IAoBOF,EAAIE,GAnB7BL,EAAYK,KAAOA,GACrBN,EAAWM,IAcH,SAOGF,EAAIK,SATFL,EAAIE,WAgBjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYS,cC5CRX,EAAO,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASb,EAAK,IAApD,mBAAOE,EAAP,KAAoBY,EAApB,KAUA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYQ,SAElC,cAAC,EAAD,CACEV,KAAMA,EACNC,WAfgB,SAACc,GACrB,IAAMC,EAAWhB,EAAKiB,MAAK,SAAAZ,GAAG,OAAIA,EAAIE,KAAOQ,KAEzCC,GACFF,EAAeE,IAYbd,YAAaA,QC5BrBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c537abe.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface Props {\n  tabs: Tab[],\n  onTabClick: (id: string) => void,\n  selectedTab: Tab,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabClick,\n  selectedTab,\n}) => {\n  const handleTabClick = (id: string) => {\n    if (selectedTab.id !== id) {\n      onTabClick(id);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({ 'is-active': selectedTab.id === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  handleTabClick(tab.id);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tabID: string) => {\n    const tabToSet = tabs.find(tab => tab.id === tabID);\n\n    if (tabToSet) {\n      setSelectedTab(tabToSet);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabClick={onTabSelected}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}