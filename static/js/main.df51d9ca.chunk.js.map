{"version":3,"sources":["components/Tab/TabInfo.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabInfo","tab","onTabClick","selectedTab","className","classNames","id","href","onClick","title","Tabs","tabs","map","content","App","useState","setSelectedTab","tabID","tabToSet","find","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAQA,OACE,oBACEC,UAAWC,IAAW,CAAE,YAAaF,EAAYG,KAAOL,EAAIK,KAC5D,UAAQ,MAFV,SAKE,mBACEC,KAAI,WAAMN,EAAIK,IACd,UAAQ,UACRE,QAAS,WAfQ,IAACF,IAgBDL,EAAIK,GAfrBH,EAAYG,KAAOA,GACrBJ,EAAWI,IAUX,SAOGL,EAAIQ,SATFR,EAAIK,KChBFI,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,KACAT,EAFmC,EAEnCA,WACAC,EAHmC,EAGnCA,YAHmC,OAKnC,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGO,EAAKC,KAAI,SAAAX,GAAG,OACX,cAAC,EAAD,CACEA,IAAKA,EACLC,WAAYA,EACZC,YAAaA,WAMrB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYU,cCrBNF,EAAO,CAClB,CAAEL,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASJ,EAAK,IAApD,mBAAOR,EAAP,KAAoBa,EAApB,KAUA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYM,SAElC,cAAC,EAAD,CACEE,KAAMA,EACNT,WAfgB,SAACe,GACrB,IAAMC,EAAWP,EAAKQ,MAAK,SAAAlB,GAAG,OAAIA,EAAIK,KAAOW,KAEzCC,GACFF,EAAeE,IAYbf,YAAaA,QC5BrBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.df51d9ca.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tab: Tab,\n  onTabClick: (id: string) => void,\n  selectedTab: Tab,\n}\n\nexport const TabInfo: React.FC<Props> = ({\n  tab,\n  onTabClick,\n  selectedTab,\n}) => {\n  const handleTabClick = (id: string) => {\n    if (selectedTab.id !== id) {\n      onTabClick(id);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({ 'is-active': selectedTab.id === tab.id })}\n      data-cy=\"Tab\"\n      key={tab.id}\n    >\n      <a\n        href={`#${tab.id}`}\n        data-cy=\"TabLink\"\n        onClick={() => {\n          handleTabClick(tab.id);\n        }}\n      >\n        {tab.title}\n      </a>\n    </li>\n  );\n};\n","import { Tab } from '../../types/Tab';\nimport { TabInfo } from '../Tab/TabInfo';\n\ninterface Props {\n  tabs: Tab[],\n  onTabClick: (id: string) => void,\n  selectedTab: Tab,\n}\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabClick,\n  selectedTab,\n}) => (\n  <div data-cy=\"TabsComponent\">\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <TabInfo\n            tab={tab}\n            onTabClick={onTabClick}\n            selectedTab={selectedTab}\n          />\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"TabContent\">\n      {selectedTab.content}\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tabID: string) => {\n    const tabToSet = tabs.find(tab => tab.id === tabID);\n\n    if (tabToSet) {\n      setSelectedTab(tabToSet);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabClick={onTabSelected}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}